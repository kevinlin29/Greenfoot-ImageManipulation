#BlueJ class context
comment0.target=Processor
comment1.params=bi\ direction
comment1.target=void\ flipImage(java.awt.image.BufferedImage,\ int)
comment1.text=\n\ Flips\ the\ image\ by\ horizontally\ or\ vertically,\ depending\ on\ the\ parameteres\n\n\ @param\ bi\ The\ buffered\ image\ to\ change\n\ @param\ direction\ The\ direction\ of\ flipping\ vertical(1)\ or\ horizontal(-1)\n
comment2.params=bi\ direction
comment2.target=greenfoot.GreenfootImage\ rotate90(java.awt.image.BufferedImage,\ int)
comment2.text=\n\ Rotates\ the\ image\ 90\ degrees\ clockwise\ or\ counterclockwise,\ depending\ on\ direction\ parameteres\n\n\ @param\ bi\ The\ buffered\ image\ to\ change\n\ @param\ direction\ The\ direction\ of\ rotation,\ clockwise(1)\ or\ counterclockwise(-1)\n\n
comment3.params=newBi
comment3.target=greenfoot.GreenfootImage\ createGreenfootImageFromBI(java.awt.image.BufferedImage)
comment4.params=bi\ change
comment4.target=void\ filters(java.awt.image.BufferedImage,\ int)
comment4.text=\n\ Change\ to\ image\ to\ gray\ scale\n\ @param\ bi\ The\ BufferedImage\ (passed\ by\ reference)\ to\ change\n\ @param\ change\ Different\ image\ process\ 1\ -\ GrayScale\ \ 2\ -\ Negative\ \ 3\ -\ warmth\ \ \ \ 4\ -\ colder\ tones\ \ 5\ -\ sepia\ \ \ \ 6\ -\ red\ crush\ \ \ \ 7\ -\ muted\ \ \ 8\ -\ kodak\ summer\n
comment5.params=bi
comment5.target=void\ storeImage(java.awt.image.BufferedImage)
comment5.text=\n\ Stores\ images\ into\ an\ greenfoot\ arrayList\n\ @param\ bi\ BufferedImage\ to\ store\ to\ arraylist\ of\ images\n\ \n
comment6.params=
comment6.target=greenfoot.GreenfootImage\ undo()
comment6.text=\n\ Undo\ the\ latest\ change\ to\ the\ image\n\ this\ method\ was\ a\ more\ straight\ forward\ and\ easier\ to\ complete\ the\ task\ in\ my\ opinion\n
comment7.params=bi
comment7.target=void\ exportPNG(java.awt.image.BufferedImage)
comment7.text=\n\ Export\ modified\ image\ as\ PNG\ file\n\ @param\ bi\ The\ bufferedImage\ to\ export\n
comment8.params=rgbaValue
comment8.target=int[]\ unpackPixel(int)
comment8.text=\n\ Takes\ in\ an\ rgb\ value\ -\ the\ kind\ that\ is\ returned\ from\ BufferedImage's\n\ getRGB()\ method\ -\ and\ returns\ 4\ integers\ for\ easy\ manipulation.\n\n\ By\ Jordan\ Cohen\n\ Version\ 0.2\n\n\ @param\ rgbaValue\ The\ value\ of\ a\ single\ pixel\ as\ an\ integer,\ representing<br>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 8\ bits\ for\ red,\ green\ and\ blue\ and\ 8\ bits\ for\ alpha\:<br>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>00000000000000000000000000000000</pre>\n\ @return\ int[4]\ \ \ Array\ containing\ 4\ shorter\ ints<br>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>0\ \ \ \ \ \ \ 1\ \ \ \ \ \ \ 2\ \ \ \ \ \ \ 3</pre>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\n
comment9.params=r\ g\ b\ a
comment9.target=int\ packagePixel(int,\ int,\ int,\ int)
comment9.text=\n\ Takes\ in\ a\ red,\ green,\ blue\ and\ alpha\ integer\ and\ uses\ bit-shifting\n\ to\ package\ all\ of\ the\ data\ into\ a\ single\ integer.\n\n\ @param\ \ \ int\ red\ value\ (0-255)\n\ @param\ \ \ int\ green\ value\ (0-255)\n\ @param\ \ \ int\ blue\ value\ (0-255)\n\ @param\ \ \ int\ alpha\ value\ (0-255)\n\n\ @return\ int\ \ Integer\ representing\ 32\ bit\ integer\ pixel\ ready\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ BufferedImage\n
numComments=10
